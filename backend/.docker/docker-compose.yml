version: '2'

services:

  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: reverse_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ../../static:/www/data/static 
      - ~/Desktop/certs_prod:/etc/nginx/certs
    links:
      - node1:node1
    depends_on: 
      - node1
    ports:
      - "8080:80"
      - "8083:443"
    networks:
      - app-network
    cap_add:
      - NET_ADMIN

  node1:
    build:
      context: .
      dockerfile: node.dockerfile
    working_dir: /usr/src/app
    volumes:
      - ../src:/usr/src/app
    ports:
      - "3000"
    environment:
      - INSTANCE=node1
    links:
      - mongo:mongo
      - couchdb:couchdb
    depends_on:
      - mongo
    networks:
      - app-network

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    logging:
      driver: none

  couchdb:
    image: couchdb:latest
    ports:
      - "5984:5984"
    networks:
      - app-network
    environment:
      - 'COUCHDB_USER=admin'
      - 'COUCHDB_PASSWORD=admin'
    volumes:
      - couch-data:/opt/couchdb/data
    logging:
      driver: none
    
  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672"
      - "15672:15672"
    networks:
      - app-network
    logging:
      driver: none

  nodemailer1:
    build:
      context: .
      dockerfile: mailer.dockerfile
    working_dir: /usr/src/app
    volumes:
      - ../src:/usr/src/app
    ports:
      - "3000"
    environment:
      - INSTANCE=nodemailer1
    depends_on:
      - rabbitmq
    networks:
      - app-network
    command: ["./wait-for-it.sh", "-t", "30", "rabbitmq:5672", "--", "nodemon", "-L", "./mailer.js"]

  nodemailer2:
    build:
      context: .
      dockerfile: mailer.dockerfile
    working_dir: /usr/src/app
    volumes:
      - ../src:/usr/src/app
    ports:
      - "3000"
    environment:
      - INSTANCE=nodemailer2
    depends_on:
      - rabbitmq
    networks:
      - app-network
    command: ["./wait-for-it.sh", "-t", "30", "rabbitmq:5672", "--", "nodemon", "-L", "./mailer.js"]

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  couch-data:
    driver: local
